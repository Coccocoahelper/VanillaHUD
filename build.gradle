//file:noinspection GroovyAssignabilityCheck
import dev.architectury.pack200.java.Pack200Adapter

plugins {
    id "dev.architectury.architectury-pack200" version "0.1.3"
    id 'org.jetbrains.kotlin.jvm' version '1.6.10'
    id "gg.essential.loom" version "0.10.0.1"
    id "net.kyori.blossom" version "1.3.0"
    id "java"
}

version = mod_version
group = "cc.woverflow"
archivesBaseName = mod_name

blossom {
    String className = "src/main/kotlin/cc/woverflow/vanillahud/VanillaHUD.kt"
    replaceToken("@VER@", project.version, className)
    replaceToken("@NAME@", mod_name, className)
    replaceToken("@ID@", mod_id, className)
}

sourceCompatibility = targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

loom {
    launchConfigs {
        client {
            arg("--tweakClass", "cc.woverflow.onecore.tweaker.OneCoreTweaker")
            arg("--mixin", "mixins.${mod_id}.json")
        }
    }
    runConfigs {
        client {
            ideConfigGenerated = true
        }
    }
    forge {
        pack200Provider = new Pack200Adapter()
        mixinConfig("mixins.${mod_id}.json")
        mixin.defaultRefmapName.set("mixins.${mod_id}.refmap.json")
    }
}

configurations {
    // Creates an extra configuration that implements `implementation` to be used later as the configuration that shades libraries
    include
    implementation.extendsFrom(include)
}

repositories {
    maven { url 'https://repo.woverflow.cc/' }
}

dependencies {
    minecraft("com.mojang:minecraft:1.8.9")
    mappings("de.oceanlabs.mcp:mcp_stable:22-1.8.9")
    forge("net.minecraftforge:forge:1.8.9-11.15.1.2318-1.8.9")
    compileOnly 'gg.essential:essential-1.8.9-forge:1852'
    include ('cc.woverflow:onecore-tweaker:1.3.0')
    compileOnly 'cc.woverflow:onecore:1.3.3'
    compileOnly ('org.spongepowered:mixin:0.8.5-SNAPSHOT')
}

/**
 * This task simply replaces the `${version}` and `${mcversion}` properties in the mcmod.info with the data from Gradle
 */
processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", version
    inputs.property "name", mod_name
    inputs.property "id", mod_id

    filesMatching("mcmod.info") {
        expand(
                "id": mod_id,
                "name": mod_name,
                "version": version
        )
    }
    filesMatching("mixins.${mod_id}.json") {
        expand("id": mod_id)
    }

    rename '(.+_at.cfg)', 'META-INF/$1'
}

sourceSets {
    main {
        output.resourcesDir = java.classesDirectory
    }
}

jar {
    dependsOn configurations.include
    from(configurations.include.collect { it.isDirectory() ? it : zipTree(it) }) {
        exclude 'gg.essential.vigilance.example.ExampleMod', 'dummyThing'
        def i = 0
        filesMatching("META-INF/NOTICE*") { name = "$name.${i++}" }
        filesMatching("META-INF/LICENSE*") { name = "$name.${i++}" }
        filesMatching("META-INF/mods.toml") { name = "$name.${i++}" }
        filesMatching("LICENSE*") { name = "$name.${i++}" }
    }

    manifest.attributes(
            'ModSide': 'CLIENT',
            'ForceLoadAsMod': true,
            'TweakClass': 'cc.woverflow.onecore.tweaker.OneCoreTweaker',
            'MixinConfigs': "mixins.${mod_id}.json",
            "TweakOrder": "0"
    )
}